apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//UNCOMMENT TO ENABLE TESTS - REMEMBER TO DO BUILD BEFORE
//apply plugin: 'groovyx.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.triplet.play'

//apply plugin: 'com.github.kt3k.coveralls'
//apply plugin: 'net.saliman.cobertura'

apply plugin: 'jacoco'
//apply plugin: 'jacoco-android'
apply plugin: 'com.getkeepsafe.dexcount'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.24.1'
    }
}

apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url "https://maven.google.com"
    }
    maven { url 'https://maven.fabric.io/public' }
}

/*
buildscript {
    dependencies {
        classpath 'org.codehaus.groovy:groovy-android-gradle-plugin:1.1.0'
    }
}
*/

task copyTestClasses(type: Copy) {
    from "build/tmp/kotlin-classes/debugUnitTest"
    into "build/intermediates/classes/debug"
}

//kapt {
////    generateStubs = true
//    arguments {
////        arg("androidManifestFile", variant.outputs[0]?.processResourcesTask?.manifestFile ?: "")
//        arg("androidManifestFile", variant.outputs[0].processResourcesk.manifestFile)
//    }
//}

android {
    playAccountConfigs {
        defaultAccountConfig {
            jsonFile = file('LibreSubstratum.json')
        }
    }
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.jereksel.libresubstratum"
        minSdkVersion 22
        targetSdkVersion 26
        if (System.getenv("CIRCLECI")) {
            versionCode System.getenv("CIRCLE_BUILD_NUM").toInteger() - 250
            if (System.getenv("CIRCLE_TAG")) {
                versionName System.getenv("CIRCLE_TAG")
            } else {
                versionName "NEXT-${"git rev-parse --short HEAD".execute().text.trim()}"
            }
        } else {
            versionCode 1
            versionName "1.0"
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

//        testInstrumentationRunner "com.jereksel.libresubstratum.TestAppAndroidJUnitRunner"
        manifestPlaceholders = [crashlytics: System.getenv("CRASHLYTICS_TOKEN") ?: ""]
        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }
    signingConfigs {
        release {
            storeFile file('./LibreSubstratum.jks')
            storePassword System.getenv("storePassword")
            keyAlias System.getenv("keyAlias")
            keyPassword System.getenv("keyPassword")
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled true
            ext.enableCrashlytics = false
        }
        debugProguarded {
            initWith(buildTypes.debug)
            minifyEnabled true
            ext.enableCrashlytics = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "store"
    productFlavors {
        play {
            dimension "store"
            versionNameSuffix "-play"
            }
        fdroid {
            dimension "store"
            versionNameSuffix "-fdroid"
            }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
            beforeTest { desc ->
                testLogging.showStandardStreams = true
                println "Executing test ${desc.name} [${desc.className}] with result: STARTED"
            }
            afterTest { desc, result ->
                testLogging.showStandardStreams = true
                println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
            }
        }
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }

}

task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ["**/R.class",
                      "**/R\$*.class",
                      "**/BuildConfig.*",
                      "**/Manifest*.*",
                      "android/**/*.*",
                      "**/Lambda\$*.class", //Retrolambda
                      "**/Lambda.class",
                      "**/*Lambda.class",
                      "**/*Lambda*.class",
                      "**/*Lambda*.*",
                      "**/*Builder.*",
                      "**/*_MembersInjector.class", //Dagger2 generated code
                      "**/*_MembersInjector*.*", //Dagger2 generated code
                      "**/*_*Factory*.*", //Dagger2 generated code
                      "**/*Component*.*", //Dagger2 generated code
                      "**/*Module*.*" //Dagger2 generated code
    ]
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/fdroid/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    def kotlinSrc = "${project.projectDir}/src/main/kotlin"
    sourceDirectories = files([mainSrc, kotlinSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes:
            ["**/*.exec" , "**/*.ec"])
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Support library
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "com.android.support:recyclerview-v7:$support_library_version"
    compile "com.android.support:cardview-v7:$support_library_version"
    compile "com.android.support:design:$support_library_version"

    //RxStuff
    compile 'io.reactivex.rxjava2:rxjava:2.1.4'
    compile 'io.reactivex.rxjava2:rxkotlin:2.1.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //Dagger
    compile "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
//    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
//    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    //Kotterknife
    compile 'com.jakewharton:kotterknife:0.1.0-20170921.134610-22', {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    compile 'com.github.clans:fab:1.6.4'

    //Logging
    compile "com.github.tony19:logback-android-core:$logback_android_version"
    compile "com.github.tony19:logback-android-classic:$logback_android_version"
    compile 'org.slf4j:slf4j-api:1.7.25'
    playCompile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    //AndroidAnnotations
//    kapt "org.androidannotations:androidannotations:$aa_version"
//    kaptTest "org.androidannotations:androidannotations:$aa_version"
//    kaptAndroidTest "org.androidannotations:androidannotations:$aa_version"
//    compile "org.androidannotations:androidannotations-api:$aa_version"

    compile 'com.github.clans:fab:1.6.4'

    compile "com.github.marcinmoskala.activitystarter:activitystarter:$activity_starter_version"
    kapt "com.github.marcinmoskala.activitystarter:activitystarter-compiler:$activity_starter_version"

    compile "org.jetbrains.anko:anko-commons:$anko_version"

    //UI
    compile 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'
    compile 'com.simplecityapps:recyclerview-fastscroll:1.0.16'

    compile 'com.github.kittinunf.result:result:1.2.0'

    //Signing
    compile project(":zipsigner:combined")

    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.jereksel:omslib:1.0.2'

    //So Proguard would shut up
    compile 'com.google.j2objc:j2objc-annotations:1.3'
    compile 'com.google.errorprone:error_prone_annotations:2.1.1'
    compile 'com.google.guava:guava:20.0'
    androidTestCompile 'com.google.guava:guava:20.0'
//    compile 'com.android.tools.build:apksig:2.3.0-alpha3'

    compile project(":sublib:models")
    compile project(":sublib:reader")
    compile project(":sublib:themereaderassetmanager")

    //Testing
    testCompile 'junit:junit:4.12'
/*    testCompile 'org.codehaus.groovy:groovy:2.4.7:grooid'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'junit'
    }
    testCompile 'cglib:cglib-nodep:3.2.4'*/
    testCompile "org.robolectric:robolectric:3.4.2"
    testCompile 'org.mockito:mockito-core:2.7.19'

    //DON'T UPDATE: https://github.com/kotlintest/kotlintest/issues/174
    testCompile ('io.kotlintest:kotlintest:1.3.5') {
        exclude group: "org.jetbrains.kotlin"
    }
    testCompile ("com.nhaarman:mockito-kotlin:1.3.0") {
        exclude group: "org.jetbrains.kotlin"
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile ('com.android.support.test:runner:0.3', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile ('com.android.support.test:rules:0.3', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile group: 'commons-io', name: 'commons-io', version: '2.5'

    //assertj android
    testCompile ("com.squareup.assertj:assertj-android:$assertj_android_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "com.squareup.assertj:assertj-android-support-v4:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-play-services:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-appcompat-v7:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-design:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-mediarouter-v7:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-gridlayout-v7:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-cardview-v7:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-recyclerview-v7:$assertj_android_version@aar"
    testCompile "com.squareup.assertj:assertj-android-palette-v7:$assertj_android_version@aar"

    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    compile project(path: ':sublib:compiler')
    testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    androidTestCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'

    androidTestCompile group: 'commons-io', name: 'commons-io', version: '2.5'
    androidTestCompile 'org.mockito:mockito-core:2.10.0'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile ('io.kotlintest:kotlintest:1.3.5') {
        exclude group: "org.jetbrains.kotlin"
    }
    androidTestCompile ("com.nhaarman:mockito-kotlin:1.5.0") {
        exclude group: "org.jetbrains.kotlin"
    }
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-intents:2.2.2", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    })
}

play {
    if (System.getenv("CIRCLE_TAG")) {
        track = 'production'
    } else {
        track = 'beta'
    }
    untrackOld = true
    uploadImages = true
}

